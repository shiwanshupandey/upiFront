{"ast":null,"code":"var _jsxFileName = \"/home/shiwanshu/Desktop/upiFront/src/Components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Form.css'; // Import the CSS file\nimport { Parallax } from 'react-parallax';\nimport formData from './FormData.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormPage1() {\n  _s();\n  const navigate = useNavigate();\n  const [formFields, setFormFields] = useState([]);\n  const [formDataState, setFormDataState] = useState({\n    // Initial form data state\n    name: '',\n    birthdate: '',\n    mobileNumber: '',\n    email: '',\n    correspondenceAddress: '',\n    permanentAddress: '',\n    educationalDetails: '',\n    totalJobExperience: '',\n    paymentMode: []\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    // Fetch form data from JSON file on component mount\n    setFormFields(formData.sections);\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      // Handle checkbox inputs separately\n      const newPaymentMode = [...formDataState.paymentMode];\n      if (checked) {\n        newPaymentMode.push(value);\n      } else {\n        const index = newPaymentMode.indexOf(value);\n        if (index !== -1) {\n          newPaymentMode.splice(index, 1);\n        }\n      }\n      setFormDataState({\n        ...formDataState,\n        [name]: newPaymentMode\n      });\n    } else {\n      setFormDataState({\n        ...formDataState,\n        [name]: value\n      });\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    formFields.forEach(section => {\n      section.fields.forEach(field => {\n        if (!formDataState[field.name]) {\n          newErrors[field.name] = 'This field is required';\n        }\n      });\n    });\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length === 0) {\n      navigate('/page2', {\n        state: {\n          formData: formDataState\n        }\n      });\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Parallax, {\n    strength: -700,\n    bgImage: \"/Parallaxeffeect.jpeg\",\n    className: \"parallax-section\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"form-headingtext\",\n            children: \"Mastery Interview Success Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-description\",\n            children: \"Please fill out the form below to complete your application.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), formFields.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: section.fields.map((field, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Form-headingtext\",\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            name: field.name,\n            value: formDataState[field.name],\n            onChange: handleChange,\n            children: field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.text\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this) : field.type === 'checkbox' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkboxform-Contain\",\n            children: field.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: field.name,\n                value: option.value,\n                checked: formDataState.paymentMode.includes(option.value),\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), option.text]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type,\n            name: field.name,\n            value: formDataState[field.name],\n            onChange: handleChange,\n            placeholder: field.placeholder || '',\n            pattern: field.pattern || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this), errors[field.name] && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors[field.name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 40\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(FormPage1, \"ASEKpe3+b0jAc3YG8FWmcJCOunk=\", false, function () {\n  return [useNavigate];\n});\n_c = FormPage1;\nexport default FormPage1;\nvar _c;\n$RefreshReg$(_c, \"FormPage1\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Parallax","formData","jsxDEV","_jsxDEV","FormPage1","_s","navigate","formFields","setFormFields","formDataState","setFormDataState","name","birthdate","mobileNumber","email","correspondenceAddress","permanentAddress","educationalDetails","totalJobExperience","paymentMode","errors","setErrors","sections","handleChange","e","value","type","checked","target","newPaymentMode","push","index","indexOf","splice","validateForm","newErrors","forEach","section","fields","field","handleSubmit","preventDefault","formErrors","Object","keys","length","state","strength","bgImage","className","children","onSubmit","noValidate","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","label","onChange","options","option","i","text","includes","placeholder","pattern","_c","$RefreshReg$"],"sources":["/home/shiwanshu/Desktop/upiFront/src/Components/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Form.css'; // Import the CSS file\nimport { Parallax } from 'react-parallax';\nimport formData from './FormData.json'; // Import the JSON file\n\nfunction FormPage1() {\n  const navigate = useNavigate();\n  const [formFields, setFormFields] = useState([]);\n  const [formDataState, setFormDataState] = useState({\n    // Initial form data state\n    name: '',\n    birthdate: '',\n    mobileNumber: '',\n    email: '',\n    correspondenceAddress: '',\n    permanentAddress: '',\n    educationalDetails: '',\n    totalJobExperience: '',\n    paymentMode: []\n  });\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    // Fetch form data from JSON file on component mount\n    setFormFields(formData.sections);\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    if (type === 'checkbox') {\n      // Handle checkbox inputs separately\n      const newPaymentMode = [...formDataState.paymentMode];\n      if (checked) {\n        newPaymentMode.push(value);\n      } else {\n        const index = newPaymentMode.indexOf(value);\n        if (index !== -1) {\n          newPaymentMode.splice(index, 1);\n        }\n      }\n      setFormDataState({ ...formDataState, [name]: newPaymentMode });\n    } else {\n      setFormDataState({ ...formDataState, [name]: value });\n    }\n  };\n  \n  const validateForm = () => {\n    const newErrors = {};\n    formFields.forEach(section => {\n      section.fields.forEach(field => {\n        if (!formDataState[field.name]) {\n          newErrors[field.name] = 'This field is required';\n        }\n      });\n    });\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length === 0) {\n      navigate('/page2', { state: { formData: formDataState } });\n    } else {\n      setErrors(formErrors);\n    }\n  };\n\n  return (\n    <Parallax strength={-700} bgImage=\"/Parallaxeffeect.jpeg\" className=\"parallax-section\">\n      \n      <form onSubmit={handleSubmit} noValidate>\n      <div className=\"form-background\">\n        <div className=\"form-overlay\">\n          <h1 className='form-headingtext'>Mastery Interview Success Program</h1>\n          <p className='form-description'>Please fill out the form below to complete your application.</p>\n        </div>\n      </div>\n        {formFields.map((section, index) => (\n          <div key={index}>\n            {section.fields.map((field, idx) => (\n              <label key={idx}>\n                <h1 className='Form-headingtext'>{field.label}</h1>\n                {field.type === 'select' ? (\n                  <select\n                    name={field.name}\n                    value={formDataState[field.name]}\n                    onChange={handleChange}\n                  >\n                    {field.options.map((option, i) => (\n                      <option key={i} value={option.value}>{option.text}</option>\n                    ))}\n                  </select>\n                ) : field.type === 'checkbox' ? (\n                  <div className='checkboxform-Contain'>\n                    {field.options.map((option, i) => (\n                      <label key={i}>\n                        <input\n                          type=\"checkbox\"\n                          name={field.name}\n                          value={option.value}\n                          checked={formDataState.paymentMode.includes(option.value)}\n                          onChange={handleChange}\n                        />\n                        {option.text}\n                      </label>\n                    ))}\n                  </div>\n                ) : (\n                  <input\n                    type={field.type}\n                    name={field.name}\n                    value={formDataState[field.name]}\n                    onChange={handleChange}\n                    placeholder={field.placeholder || ''}\n                    pattern={field.pattern || ''}\n                  />\n                )}\n                {errors[field.name] && <span className=\"error\">{errors[field.name]}</span>}\n              </label>\n            ))}\n          </div>\n        ))}\n        <button type=\"submit\">Next</button>\n      </form>\n    </Parallax>\n  );\n}\n\nexport default FormPage1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}